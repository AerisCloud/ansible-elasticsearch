# this must be the same as for your elasticsearch cluster
cluster.name: {{ elasticsearch_cluster_name }}

# you could also leave this out, but makes it easier to identify the graylog2 client instance
node.name: {{ inventory_hostname }}

# use a different port if you run multiple elasticsearch nodes on one machine
transport.tcp.port: {{ elasticsearch_tcp_port }}

network.host: {{ ansible_ssh_host }}

# we don't need to run the embedded HTTP server here
http.enabled: true
# http.port: {{ elasticsearch_http_port }}

# adapt these for discovery to work in your network! multicast can be tricky
{% if elasticsearch_autodiscovery|string == "True" %}
discovery.zen.ping.multicast.address: {{ ansible_ssh_host }}
discovery.zen.ping.multicast.group: 224.2.2.4
{% else %}
discovery.zen.ping.multicast.enabled: false
discovery.zen.ping.unicast.hosts:
{% for host in groups[elasticsearch_cluster_name] %}
    - {{ hostvars[host]['ansible_ssh_host'] }}:{{ elasticsearch_tcp_port }}
{% endfor %}
{% endif %}

################################## Discovery ##################################

# Discovery infrastructure ensures nodes can be found within a cluster
# and master node is elected. Multicast discovery is the default.

# Set to ensure a node sees N other master eligible nodes to be considered
# operational within the cluster. Set this option to a higher value (2-4)
# for large clusters (>3 nodes):
#
# discovery.zen.minimum_master_nodes: 1

# Set the time to wait for ping responses from other nodes when discovering.
# Set this option to a higher value on a slow or congested network
# to minimize discovery failures:
#
# discovery.zen.ping.timeout: 3s

# See <http://elasticsearch.org/guide/reference/modules/discovery/zen.html>
# for more information.

# Unicast discovery allows to explicitly control which nodes will be used
# to discover the cluster. It can be used when multicast is not present,
# or to restrict the cluster communication-wise.
#
# 1. Disable multicast discovery (enabled by default):
#
# discovery.zen.ping.multicast.enabled: false
#
# 2. Configure an initial list of master nodes in the cluster
#    to perform discovery when new nodes (master or data) are started:
#
# discovery.zen.ping.unicast.hosts: ["host1", "host2:port", "host3[portX-portY]"]

# EC2 discovery allows to use AWS EC2 API in order to perform discovery.
#
# You have to install the cloud-aws plugin for enabling the EC2 discovery.
#
# See <http://elasticsearch.org/guide/reference/modules/discovery/ec2.html>
# for more information.
#
# See <http://elasticsearch.org/tutorials/2011/08/22/elasticsearch-on-ec2.html>
# for a step-by-step tutorial.
